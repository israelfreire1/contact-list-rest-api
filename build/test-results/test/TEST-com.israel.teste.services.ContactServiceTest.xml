<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.israel.teste.services.ContactServiceTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2024-06-19T13:32:58" hostname="ni-14033-0p" time="1.494">
  <properties/>
  <testcase name="addContact" classname="com.israel.teste.services.ContactServiceTest" time="1.308"/>
  <testcase name="alterContact" classname="com.israel.teste.services.ContactServiceTest" time="0.046"/>
  <testcase name="deleteContact" classname="com.israel.teste.services.ContactServiceTest" time="0.032"/>
  <testcase name="showContact" classname="com.israel.teste.services.ContactServiceTest" time="0.002"/>
  <testcase name="listAllContacts" classname="com.israel.teste.services.ContactServiceTest" time="0.104"/>
  <system-out><![CDATA[10:32:59.454 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ContactRepository name=contactRepository#1
10:33:00.119 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Contact name=child of contactRepository#1#2
10:33:00.121 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering false on ContactRepository(contactRepository#1).existsByNameAndEmail(Israel, isantos@gmail.com)
10:33:00.122 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering false on ContactRepository(contactRepository#1).existsByName(Israel)
10:33:00.122 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering false on ContactRepository(contactRepository#1).existsByEmail(isantos@gmail.com)
10:33:00.122 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Contact(id=1, name=Israel, email=isantos@gmail.com, phone_number=77981460173) on ContactRepository(contactRepository#1).save(Contact(id=1, name=Israel, email=isantos@gmail.com, phone_number=77981460173))
10:33:00.127 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ContactRepository name=contactRepository#3
10:33:00.168 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Optional name=child of contactRepository#3#4
10:33:00.170 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Contact name=child of contactRepository#3#5
10:33:00.171 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Optional[Contact(id=1, name=Israel Santos, email=isantos@gmail.com, phone_number=77981460173)] on ContactRepository(contactRepository#3).findById(1)
10:33:00.172 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Contact(id=1, name=Israel Santana, email=isantos1@gmail.com, phone_number=77981460173) on ContactRepository(contactRepository#3).save(Contact(id=1, name=Israel Santana, email=isantos1@gmail.com, phone_number=77981460173))
10:33:00.173 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ContactRepository name=contactRepository#6
10:33:00.174 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Optional name=child of contactRepository#6#7
10:33:00.191 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Unit name=child of contactRepository#6#8
10:33:00.193 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Optional[Contact(id=1, name=Israel Santos, email=isantos@gmail.com, phone_number=77981460173)] on ContactRepository(contactRepository#6).findById(1)
10:33:00.194 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering kotlin.Unit on ContactRepository(contactRepository#6).delete(Contact(id=1, name=Israel Santos, email=isantos@gmail.com, phone_number=77981460173))
10:33:00.206 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ContactRepository name=contactRepository#9
10:33:00.207 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for Optional name=child of contactRepository#9#10
10:33:00.208 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering Optional[Contact(id=1, name=Israel Santos, email=isantos@gmail.com, phone_number=77981460173)] on ContactRepository(contactRepository#9).findById(1)
10:33:00.208 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ContactRepository name=contactRepository#11
10:33:00.310 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for List name=child of contactRepository#11#12
10:33:00.311 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering [Contact(id=1, name=Israel, email=israel@gmail.com, phone_number=77981460173), Contact(id=2, name=JosÃ©, email=zdelivery@gmail.com, phone_number=77981460176)] on ContactRepository(contactRepository#11).findAll()
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
